/*
 * Copyright 2021 SWM Services GmbH
 */

package de.swm.mbi.server;

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.SneakyThrows;

import java.util.List;
import java.util.regex.Pattern;

import static java.lang.Integer.compare;
import static java.lang.Integer.parseInt;
import static java.lang.Math.abs;
import static java.lang.Math.max;
import static java.util.Arrays.stream;
import static java.util.function.Predicate.not;
import static java.util.regex.Pattern.compile;
import static java.util.stream.Collectors.toList;
import static java.util.stream.IntStream.rangeClosed;

public class Vent {
	private static final Pattern LINE_PATTERN = compile("([0-9]+),([0-9]+) -> ([0-9]+),([0-9]+)");

	private static final String INPUT1 = "0,9 -> 5,9\n" +
			"8,0 -> 0,8\n" +
			"9,4 -> 3,4\n" +
			"2,2 -> 2,1\n" +
			"7,0 -> 7,4\n" +
			"6,4 -> 2,0\n" +
			"0,9 -> 2,9\n" +
			"3,4 -> 1,4\n" +
			"0,0 -> 8,8\n" +
			"5,5 -> 8,2";

	private static final String INPUT2 = "609,916 -> 60,367\n" +
			"349,494 -> 682,494\n" +
			"75,370 -> 397,370\n" +
			"55,623 -> 55,183\n" +
			"296,865 -> 296,235\n" +
			"810,691 -> 504,385\n" +
			"256,67 -> 256,468\n" +
			"446,679 -> 446,594\n" +
			"592,16 -> 98,16\n" +
			"866,642 -> 866,622\n" +
			"293,672 -> 911,672\n" +
			"799,855 -> 799,638\n" +
			"890,805 -> 389,304\n" +
			"454,263 -> 454,501\n" +
			"798,86 -> 540,86\n" +
			"331,256 -> 351,256\n" +
			"882,93 -> 445,530\n" +
			"879,163 -> 879,841\n" +
			"448,476 -> 96,476\n" +
			"230,198 -> 941,198\n" +
			"943,918 -> 70,45\n" +
			"666,502 -> 552,616\n" +
			"56,14 -> 978,936\n" +
			"438,284 -> 850,284\n" +
			"86,824 -> 86,277\n" +
			"170,461 -> 737,461\n" +
			"675,85 -> 675,289\n" +
			"289,14 -> 814,539\n" +
			"541,94 -> 541,868\n" +
			"334,391 -> 470,391\n" +
			"782,313 -> 358,313\n" +
			"165,301 -> 17,153\n" +
			"11,406 -> 11,869\n" +
			"758,365 -> 758,708\n" +
			"835,313 -> 212,936\n" +
			"636,387 -> 636,314\n" +
			"393,588 -> 393,694\n" +
			"193,639 -> 193,747\n" +
			"850,524 -> 557,817\n" +
			"465,751 -> 465,652\n" +
			"194,552 -> 194,380\n" +
			"212,270 -> 212,691\n" +
			"230,595 -> 581,595\n" +
			"135,698 -> 325,698\n" +
			"973,846 -> 333,206\n" +
			"508,297 -> 237,297\n" +
			"72,397 -> 418,397\n" +
			"159,921 -> 914,166\n" +
			"579,202 -> 370,202\n" +
			"375,86 -> 638,349\n" +
			"903,917 -> 14,28\n" +
			"43,841 -> 824,60\n" +
			"928,11 -> 478,11\n" +
			"562,129 -> 803,129\n" +
			"880,61 -> 564,377\n" +
			"967,949 -> 122,104\n" +
			"293,943 -> 293,484\n" +
			"674,466 -> 674,192\n" +
			"583,724 -> 834,724\n" +
			"499,888 -> 973,888\n" +
			"302,519 -> 470,351\n" +
			"793,284 -> 669,284\n" +
			"74,716 -> 799,716\n" +
			"517,529 -> 163,529\n" +
			"863,711 -> 863,91\n" +
			"977,988 -> 62,73\n" +
			"989,32 -> 370,651\n" +
			"795,627 -> 584,838\n" +
			"984,340 -> 96,340\n" +
			"780,425 -> 316,889\n" +
			"563,140 -> 378,140\n" +
			"203,55 -> 719,55\n" +
			"273,757 -> 763,267\n" +
			"836,901 -> 846,901\n" +
			"152,319 -> 136,319\n" +
			"92,970 -> 970,92\n" +
			"84,46 -> 498,46\n" +
			"539,408 -> 539,259\n" +
			"822,366 -> 694,366\n" +
			"586,819 -> 755,988\n" +
			"218,340 -> 218,812\n" +
			"394,197 -> 813,616\n" +
			"458,24 -> 401,24\n" +
			"684,92 -> 241,92\n" +
			"456,569 -> 746,859\n" +
			"611,961 -> 508,961\n" +
			"90,980 -> 90,423\n" +
			"21,13 -> 981,973\n" +
			"877,27 -> 354,27\n" +
			"583,327 -> 583,627\n" +
			"512,808 -> 662,958\n" +
			"688,832 -> 578,722\n" +
			"213,281 -> 901,969\n" +
			"473,42 -> 955,524\n" +
			"303,442 -> 614,753\n" +
			"829,831 -> 162,164\n" +
			"176,25 -> 952,801\n" +
			"23,12 -> 989,978\n" +
			"798,859 -> 710,859\n" +
			"140,784 -> 140,285\n" +
			"536,248 -> 536,917\n" +
			"950,753 -> 738,541\n" +
			"331,159 -> 778,159\n" +
			"834,385 -> 834,666\n" +
			"192,614 -> 650,614\n" +
			"820,503 -> 985,503\n" +
			"831,845 -> 62,76\n" +
			"653,606 -> 984,606\n" +
			"534,515 -> 969,515\n" +
			"105,824 -> 860,824\n" +
			"384,501 -> 486,603\n" +
			"425,337 -> 425,199\n" +
			"381,212 -> 381,704\n" +
			"897,890 -> 897,783\n" +
			"378,82 -> 564,82\n" +
			"630,940 -> 659,969\n" +
			"954,980 -> 815,841\n" +
			"718,111 -> 23,806\n" +
			"41,732 -> 426,732\n" +
			"346,671 -> 597,671\n" +
			"931,51 -> 32,950\n" +
			"875,738 -> 875,910\n" +
			"982,35 -> 97,920\n" +
			"646,341 -> 646,471\n" +
			"913,788 -> 745,788\n" +
			"979,11 -> 32,958\n" +
			"618,283 -> 618,382\n" +
			"386,47 -> 386,957\n" +
			"680,652 -> 430,652\n" +
			"26,752 -> 26,978\n" +
			"314,689 -> 941,62\n" +
			"806,366 -> 454,366\n" +
			"27,365 -> 184,365\n" +
			"461,915 -> 548,828\n" +
			"332,371 -> 878,371\n" +
			"446,208 -> 615,208\n" +
			"888,673 -> 888,288\n" +
			"529,975 -> 47,975\n" +
			"755,806 -> 489,806\n" +
			"297,108 -> 311,122\n" +
			"585,885 -> 968,885\n" +
			"334,359 -> 334,251\n" +
			"690,401 -> 637,454\n" +
			"131,522 -> 964,522\n" +
			"103,831 -> 378,556\n" +
			"621,327 -> 621,561\n" +
			"178,932 -> 979,131\n" +
			"452,285 -> 903,285\n" +
			"942,448 -> 919,448\n" +
			"102,966 -> 818,250\n" +
			"116,226 -> 746,856\n" +
			"855,799 -> 855,244\n" +
			"425,963 -> 387,963\n" +
			"548,879 -> 372,703\n" +
			"607,157 -> 607,611\n" +
			"949,15 -> 79,885\n" +
			"978,325 -> 639,325\n" +
			"887,605 -> 208,605\n" +
			"426,694 -> 426,296\n" +
			"498,960 -> 498,358\n" +
			"800,874 -> 800,529\n" +
			"172,106 -> 701,635\n" +
			"985,160 -> 985,473\n" +
			"804,34 -> 431,407\n" +
			"976,978 -> 10,12\n" +
			"865,761 -> 134,30\n" +
			"987,825 -> 987,746\n" +
			"110,730 -> 370,730\n" +
			"237,34 -> 814,611\n" +
			"292,700 -> 292,352\n" +
			"699,880 -> 699,286\n" +
			"611,94 -> 611,234\n" +
			"978,248 -> 354,248\n" +
			"517,600 -> 329,600\n" +
			"782,46 -> 218,610\n" +
			"31,15 -> 880,864\n" +
			"563,404 -> 472,404\n" +
			"696,552 -> 974,552\n" +
			"785,202 -> 861,202\n" +
			"94,829 -> 94,404\n" +
			"541,395 -> 531,395\n" +
			"248,810 -> 935,123\n" +
			"169,843 -> 169,870\n" +
			"557,35 -> 345,247\n" +
			"958,24 -> 835,24\n" +
			"130,333 -> 302,161\n" +
			"961,53 -> 87,927\n" +
			"485,285 -> 975,285\n" +
			"376,788 -> 260,788\n" +
			"378,590 -> 378,253\n" +
			"235,961 -> 406,961\n" +
			"93,170 -> 93,339\n" +
			"707,782 -> 475,782\n" +
			"385,719 -> 385,340\n" +
			"430,758 -> 412,740\n" +
			"169,780 -> 504,445\n" +
			"238,109 -> 238,383\n" +
			"805,603 -> 805,364\n" +
			"981,373 -> 458,896\n" +
			"514,203 -> 372,203\n" +
			"942,234 -> 855,234\n" +
			"446,292 -> 446,917\n" +
			"882,478 -> 882,394\n" +
			"690,768 -> 742,768\n" +
			"356,652 -> 356,891\n" +
			"675,751 -> 675,37\n" +
			"370,252 -> 574,252\n" +
			"777,736 -> 777,177\n" +
			"230,367 -> 787,367\n" +
			"187,274 -> 187,752\n" +
			"850,888 -> 23,61\n" +
			"356,258 -> 392,258\n" +
			"176,698 -> 434,440\n" +
			"133,813 -> 133,635\n" +
			"655,574 -> 909,574\n" +
			"365,771 -> 635,501\n" +
			"738,611 -> 378,611\n" +
			"322,85 -> 322,591\n" +
			"137,596 -> 137,522\n" +
			"686,339 -> 686,59\n" +
			"843,886 -> 963,886\n" +
			"967,639 -> 179,639\n" +
			"491,208 -> 491,950\n" +
			"396,526 -> 644,774\n" +
			"29,29 -> 986,986\n" +
			"250,40 -> 703,40\n" +
			"25,784 -> 757,52\n" +
			"443,582 -> 324,582\n" +
			"753,369 -> 404,369\n" +
			"987,966 -> 34,13\n" +
			"390,21 -> 983,21\n" +
			"861,626 -> 757,730\n" +
			"873,220 -> 873,459\n" +
			"529,646 -> 529,90\n" +
			"886,668 -> 682,464\n" +
			"315,310 -> 315,846\n" +
			"674,449 -> 674,594\n" +
			"719,448 -> 544,623\n" +
			"625,170 -> 182,613\n" +
			"242,498 -> 337,498\n" +
			"496,23 -> 793,23\n" +
			"258,240 -> 151,133\n" +
			"256,309 -> 110,455\n" +
			"312,438 -> 312,672\n" +
			"710,549 -> 710,920\n" +
			"967,719 -> 967,414\n" +
			"201,324 -> 632,324\n" +
			"902,167 -> 226,167\n" +
			"745,517 -> 677,449\n" +
			"548,18 -> 817,18\n" +
			"711,806 -> 672,845\n" +
			"907,554 -> 907,837\n" +
			"144,810 -> 698,256\n" +
			"549,247 -> 549,623\n" +
			"309,802 -> 330,823\n" +
			"528,275 -> 158,645\n" +
			"689,372 -> 689,448\n" +
			"621,60 -> 621,332\n" +
			"38,884 -> 892,30\n" +
			"117,898 -> 989,26\n" +
			"521,702 -> 521,42\n" +
			"985,142 -> 377,750\n" +
			"482,517 -> 562,517\n" +
			"333,168 -> 963,798\n" +
			"296,642 -> 564,642\n" +
			"112,541 -> 111,541\n" +
			"745,395 -> 474,124\n" +
			"279,238 -> 766,238\n" +
			"491,747 -> 491,616\n" +
			"973,462 -> 150,462\n" +
			"867,120 -> 867,966\n" +
			"854,498 -> 854,244\n" +
			"684,233 -> 929,233\n" +
			"120,151 -> 545,151\n" +
			"172,361 -> 630,361\n" +
			"100,219 -> 416,219\n" +
			"988,24 -> 27,985\n" +
			"969,160 -> 193,936\n" +
			"985,891 -> 158,64\n" +
			"284,875 -> 857,302\n" +
			"310,363 -> 310,544\n" +
			"841,902 -> 245,902\n" +
			"964,240 -> 435,240\n" +
			"787,358 -> 399,358\n" +
			"177,637 -> 177,250\n" +
			"397,61 -> 60,61\n" +
			"889,180 -> 409,180\n" +
			"631,899 -> 551,979\n" +
			"253,912 -> 253,876\n" +
			"916,700 -> 983,700\n" +
			"89,512 -> 515,938\n" +
			"516,940 -> 516,526\n" +
			"303,587 -> 303,698\n" +
			"287,323 -> 287,730\n" +
			"907,528 -> 907,722\n" +
			"450,118 -> 450,907\n" +
			"12,356 -> 12,875\n" +
			"210,34 -> 726,550\n" +
			"198,364 -> 198,506\n" +
			"314,242 -> 942,242\n" +
			"939,86 -> 198,827\n" +
			"783,959 -> 837,959\n" +
			"978,180 -> 979,180\n" +
			"72,668 -> 643,97\n" +
			"888,841 -> 888,712\n" +
			"553,166 -> 553,253\n" +
			"733,880 -> 733,805\n" +
			"921,36 -> 37,920\n" +
			"113,164 -> 909,960\n" +
			"27,746 -> 269,746\n" +
			"734,978 -> 734,158\n" +
			"334,249 -> 218,249\n" +
			"966,762 -> 773,762\n" +
			"971,862 -> 171,62\n" +
			"607,609 -> 607,880\n" +
			"140,261 -> 140,983\n" +
			"705,944 -> 906,944\n" +
			"691,617 -> 130,617\n" +
			"657,190 -> 657,84\n" +
			"228,840 -> 655,840\n" +
			"653,876 -> 311,534\n" +
			"620,337 -> 625,337\n" +
			"76,510 -> 220,510\n" +
			"39,980 -> 931,88\n" +
			"339,44 -> 179,44\n" +
			"292,830 -> 706,416\n" +
			"640,184 -> 441,184\n" +
			"583,238 -> 583,896\n" +
			"666,593 -> 502,593\n" +
			"317,750 -> 743,750\n" +
			"574,466 -> 679,466\n" +
			"636,348 -> 636,130\n" +
			"115,268 -> 443,596\n" +
			"411,664 -> 213,664\n" +
			"926,615 -> 452,141\n" +
			"258,232 -> 147,232\n" +
			"786,297 -> 181,297\n" +
			"780,271 -> 101,950\n" +
			"533,494 -> 159,120\n" +
			"478,286 -> 365,286\n" +
			"753,247 -> 933,247\n" +
			"334,937 -> 334,419\n" +
			"821,57 -> 821,647\n" +
			"970,68 -> 50,988\n" +
			"158,799 -> 158,598\n" +
			"574,632 -> 975,632\n" +
			"217,184 -> 880,184\n" +
			"443,130 -> 573,260\n" +
			"937,144 -> 240,841\n" +
			"129,547 -> 129,327\n" +
			"805,174 -> 900,174\n" +
			"650,335 -> 115,870\n" +
			"122,804 -> 679,247\n" +
			"104,829 -> 104,587\n" +
			"933,452 -> 71,452\n" +
			"181,469 -> 181,702\n" +
			"114,136 -> 890,912\n" +
			"649,144 -> 746,241\n" +
			"42,297 -> 592,847\n" +
			"721,572 -> 34,572\n" +
			"291,262 -> 960,931\n" +
			"154,503 -> 154,682\n" +
			"264,869 -> 264,626\n" +
			"310,421 -> 579,421\n" +
			"869,390 -> 448,390\n" +
			"223,737 -> 223,627\n" +
			"760,162 -> 760,210\n" +
			"484,465 -> 401,465\n" +
			"582,921 -> 582,75\n" +
			"31,905 -> 546,905\n" +
			"119,376 -> 119,58\n" +
			"76,520 -> 76,102\n" +
			"780,257 -> 590,257\n" +
			"873,796 -> 540,796\n" +
			"469,605 -> 421,653\n" +
			"188,667 -> 390,869\n" +
			"926,279 -> 926,638\n" +
			"22,959 -> 163,959\n" +
			"444,439 -> 444,647\n" +
			"923,513 -> 577,859\n" +
			"500,162 -> 374,162\n" +
			"143,988 -> 143,29\n" +
			"82,754 -> 82,982\n" +
			"107,911 -> 107,941\n" +
			"281,782 -> 638,782\n" +
			"740,445 -> 967,672\n" +
			"280,516 -> 280,882\n" +
			"203,157 -> 465,157\n" +
			"16,984 -> 982,18\n" +
			"122,823 -> 81,823\n" +
			"881,232 -> 881,78\n" +
			"33,94 -> 33,259\n" +
			"29,109 -> 695,775\n" +
			"24,593 -> 921,593\n" +
			"186,503 -> 186,243\n" +
			"369,561 -> 369,176\n" +
			"381,835 -> 462,835\n" +
			"838,911 -> 153,226\n" +
			"115,683 -> 115,444\n" +
			"429,145 -> 85,489\n" +
			"875,577 -> 365,577\n" +
			"221,539 -> 221,252\n" +
			"65,957 -> 65,468\n" +
			"112,175 -> 112,475\n" +
			"358,700 -> 676,700\n" +
			"428,508 -> 428,36\n" +
			"29,962 -> 977,14\n" +
			"941,16 -> 87,870\n" +
			"599,923 -> 683,839\n" +
			"918,244 -> 702,28\n" +
			"926,754 -> 262,754\n" +
			"455,139 -> 455,851\n" +
			"113,189 -> 113,235\n" +
			"429,441 -> 546,441\n" +
			"151,183 -> 929,961\n" +
			"804,335 -> 804,659\n" +
			"469,418 -> 469,235\n" +
			"103,99 -> 902,898\n" +
			"874,737 -> 595,737\n" +
			"728,451 -> 524,247\n" +
			"758,366 -> 758,690\n" +
			"765,40 -> 570,40\n" +
			"987,10 -> 19,978\n" +
			"601,881 -> 601,703\n" +
			"574,525 -> 826,777\n" +
			"690,223 -> 690,98\n" +
			"841,496 -> 715,496\n" +
			"33,32 -> 984,983\n" +
			"21,368 -> 21,209\n" +
			"883,473 -> 451,905\n" +
			"103,151 -> 198,246\n" +
			"102,72 -> 792,762\n" +
			"525,725 -> 679,879\n" +
			"276,742 -> 107,911\n" +
			"456,833 -> 456,714\n" +
			"781,769 -> 781,643\n" +
			"539,951 -> 324,951\n" +
			"467,803 -> 250,803\n" +
			"30,406 -> 258,634\n" +
			"399,475 -> 399,494\n" +
			"895,942 -> 515,942\n" +
			"512,591 -> 413,591\n" +
			"183,112 -> 687,616\n" +
			"439,860 -> 439,746\n" +
			"864,633 -> 708,477\n" +
			"846,137 -> 846,378\n" +
			"778,245 -> 330,693\n" +
			"309,458 -> 633,458\n" +
			"15,457 -> 440,882\n" +
			"563,466 -> 799,702\n" +
			"307,751 -> 307,723\n" +
			"665,987 -> 843,987\n" +
			"683,674 -> 683,497\n" +
			"644,354 -> 778,488\n" +
			"61,809 -> 735,135\n" +
			"18,124 -> 18,490\n" +
			"171,179 -> 171,216\n" +
			"99,372 -> 610,883\n" +
			"143,115 -> 871,843\n" +
			"385,688 -> 77,688\n" +
			"637,500 -> 637,896\n" +
			"409,905 -> 225,905\n" +
			"654,676 -> 474,676\n" +
			"946,81 -> 946,320\n" +
			"209,53 -> 209,535\n" +
			"757,508 -> 757,636\n" +
			"673,162 -> 255,580\n" +
			"526,593 -> 862,929\n" +
			"476,256 -> 739,256\n" +
			"879,954 -> 38,113\n" +
			"786,577 -> 141,577\n" +
			"672,131 -> 519,284\n" +
			"114,334 -> 212,334\n" +
			"571,49 -> 571,893\n" +
			"958,942 -> 41,25\n" +
			"369,545 -> 369,927\n" +
			"699,450 -> 244,450\n" +
			"15,538 -> 15,67\n" +
			"418,419 -> 90,747\n" +
			"335,758 -> 540,758\n" +
			"165,211 -> 165,357\n" +
			"534,347 -> 251,630\n" +
			"893,547 -> 893,119\n" +
			"475,581 -> 860,196\n" +
			"770,492 -> 879,492\n" +
			"131,973 -> 742,973\n" +
			"297,808 -> 297,490\n" +
			"12,974 -> 937,49\n" +
			"932,410 -> 802,410\n" +
			"40,535 -> 646,535\n" +
			"28,37 -> 951,960\n" +
			"270,506 -> 270,790\n" +
			"655,752 -> 839,752\n" +
			"979,220 -> 979,311\n" +
			"903,272 -> 234,941\n" +
			"960,786 -> 246,72\n" +
			"795,156 -> 99,852\n" +
			"784,285 -> 221,285\n" +
			"100,152 -> 100,910\n" +
			"481,628 -> 657,628";

	public static void main(String[] args) {
		System.err.println(countOverlap(parseLines(INPUT1), true));
		System.err.println(countOverlap(parseLines(INPUT2), true));
		System.err.println(countOverlap(parseLines(INPUT1), false));
		System.err.println(countOverlap(parseLines(INPUT2), false));
	}

	@SneakyThrows
	private static List<Line> parseLines(String lines) {
		return stream(lines.split("\n")).map(Vent::parseLine).collect(toList());
	}

	private static Line parseLine(String line) {
		var matcher = LINE_PATTERN.matcher(line);
		if (matcher.matches()) {
			int xs = parseInt(matcher.group(1));
			int ys = parseInt(matcher.group(2));
			int xe = parseInt(matcher.group(3));
			int ye = parseInt(matcher.group(4));
			return new Line(xs, ys, xe, ye);
		}
		throw new RuntimeException();
	}

	private static int countOverlap(List<Line> allLines, boolean removeDiagonal) {
		var lines = filterLines(allLines, removeDiagonal);

		int maxX = lines.stream().mapToInt(l -> max(l.xs, l.xe)).max().orElse(0);
		int maxY = lines.stream().mapToInt(l -> max(l.ys, l.ye)).max().orElse(0);
		int[][] field = new int[maxX + 1][maxY + 1];
		for (Line l : lines) {
			int xInc = compare(l.xe, l.xs);
			int yInc = compare(l.ye, l.ys);
			int stepCount = max(abs(l.xs - l.xe), abs(l.ys - l.ye));
			rangeClosed(0, stepCount).forEach(i -> field[l.xs + i * xInc][l.ys + i * yInc]++);
		}
		return stream(field)
				.mapToInt(row -> (int) stream(row).filter(cell -> cell > 1).count())
				.sum();
	}

	private static List<Line> filterLines(List<Line> allLines, boolean removeDiagonal) {
		return removeDiagonal ? allLines.stream().filter(not(Line::isDiagonal)).collect(toList()) : allLines;
	}

	@Data
	@AllArgsConstructor
	private static class Line {
		int xs;
		int ys;
		int xe;
		int ye;

		public boolean isDiagonal() {
			return xs != xe && ys != ye;
		}
	}
}
